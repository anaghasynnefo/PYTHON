# """single inheritence"""

# class vehicle:
#     def engine(self):
#         print("all vehicles have engine")
# class car(vehicle):
#     def fourwheel(self):
#         print("car have 4 wheel")
# c=car()
# c.fourwheel()
# c.engine()

# """multiple inheritance"""

# class father:
#     def drver(self):
#        print("driver")

# class mother:
#     def cook(self):
#         print("cook")

# class girl(father,mother):
#     def engineer(self):
#         print("engineer")

# g=girl()
# g.engineer()
# g.cook()
# g.drver()

# """multi level inheritance"""

# class grandpa:
#       print("kashandi family")
# def farmer(self):
#     print("farmer")

# class father:
#     def driver(self):
#         print("driver")
#     def reader(self):
#         print("reader")

# class me:
#     def swimming(self):
#         print("swimming")
#     def engineer(self):
#         print("engineer")

# class mechild:
#     def gamer(self):
#         print("gamer")

# ob=me
# ob.swimming

# ob=mechild
# ob.gamer

# ob=father
# ob.driver




"""data encapsulation"""



# class a:
#     _a=10
#     def _disp(self):
#         print(self._a)

# obj=a()
# obj._disp()
# print(obj._a)




# def __init__(self,accno,savings):
#     self.accno=accno
#     self.savings=savings
# def deposit(self,dep):
#      self.savings+=dep
# def display(self):
#      print("savings=",self.savings)

# anagha=bank(3606267278,5000)
# anagha.deposit(6000)
# anagha.display()

"""data abstraction"""

from abc import ABC,abstractmethod
class vehicle(ABC):
    def engine(self):
        print("engine provide")
    @abstractmethod
    def gear(self):
        pass

class car(vehicle):
        def gear(self):
            print("automatic gear")

class truck(vehicle):
        def wheel(self):
             print("heavy")
        def gear(self):
             print("manuel gear")
c=car()
c.gear()
t=truck()                                                                     




# to_do=int(input("enter the list"))
# if to_do==1:
#     a=int(input("addition to_do"))
#     b=int(input("display to_do"))
#     c=int(input("delete to_do"))
















    




















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































